{"version":3,"sources":["home.js","App.js","serviceWorker.js","index.js"],"names":["Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","scrolled","_this2","window","addEventListener","scrollY","setState","removeEventListener","react_default","a","createElement","className","md_index_esm","index_esm","title","io_index_esm","React","Component","App","react_router_dom","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5e3b901.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport { FaGithub } from 'react-icons/fa';\r\nimport { FaLinkedinIn } from 'react-icons/fa';\r\nimport { FaFileAlt } from 'react-icons/fa';\r\nimport { IoMdMail } from \"react-icons/io\";\r\nimport { MdArrowDownward } from \"react-icons/md\";\r\n\r\n\r\n \r\n\r\nclass Home extends React.Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      scrolled: false\r\n    };\r\n  }\r\n componentDidMount(){\r\n   window.addEventListener('scroll', () => {\r\n     const isTop = window.scrollY < 200;\r\n     if(isTop !== true){\r\n         this.setState({scrolled: true});\r\n     }else{\r\n      this.setState({scrolled: false});\r\n     }\r\n   });\r\n \r\n}\r\ncomponentWillUnmount(){\r\n  window.removeEventListener('scroll');\r\n}\r\n  render(){\r\n\r\n\r\n    return (\r\n       <div className=\"container\">\r\n       <div className=\"brackets-container\"><div className={this.state.scrolled ? 'first-container' : ' scrolled'}><p className=\"container-name\">Welcome!</p></div>\r\n         <div className=\"brackets\">\r\n          <p >Chiamaka Nkem-Eze</p>\r\n         </div>\r\n         </div>\r\n       <div className=\"second-container\">\r\n       <div className=\"bigtext\">\r\n       <p className=\"mainbigtext\">JUNIOR FRONT-END WEB DEVELOPER</p>\r\n       </div>\r\n       <div className=\"third-container\">\r\n          <p >Projects  </p>\r\n          <MdArrowDownward className=\"check-below\"/>\r\n         </div>\r\n       </div>\r\n      \r\n       <div className=\"fourth-container\">\r\n         <div className=\"fourth-container-image\">\r\n         \r\n         <p>WASHLY APP</p>\r\n         <div className=\"content\">\r\n         <p>WASHLY APP</p>\r\n         </div>\r\n         </div>\r\n         <div className=\"fourth-container-image\">\r\n         <div></div>\r\n         <p>MEAL PLANNER APP</p>\r\n         <div className=\"content\">\r\n         <p>WASHLY APP</p>\r\n         </div>\r\n         </div>\r\n         <div className=\"fourth-container-image\">\r\n         <div></div>\r\n         <p>YAMI MOVIE RENTAL</p>\r\n         <div className=\"content\">\r\n         <p>WASHLY APP</p>\r\n         </div>\r\n         </div>\r\n         <div className=\"fourth-container-image\">\r\n         \r\n         <p>CURRENCY CONVERTER</p>\r\n         <div className=\"content\">\r\n         <p>WASHLY APP</p>\r\n         </div>\r\n         </div>\r\n       </div>\r\n       <div className=\"social-icon-container\"> \r\n         <ul>\r\n         <li><FaGithub title=\"Github\" className=\"social-icon one\"/></li>\r\n         <li><FaLinkedinIn title=\"LinkedIn\" className=\"social-icon two\"/></li>\r\n         <li><FaFileAlt title=\"CV\" className=\"social-icon three\"/></li>\r\n         <li><IoMdMail title=\"GMAIL\" className=\"social-icon four\"/></li>\r\n       </ul>\r\n       </div>\r\n       </div>\r\n    );\r\n  };\r\n};\r\n\r\n\r\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Home from './home';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\n\nclass App extends React.Component{\n  render(){\n    return (\n      <Router> \n     <Switch>\n       <Route exact path=\"/\" component={Home}/>\n       <Route path=\"/home/\" component={Home}/>\n     </Switch>\n      </Router>\n    \n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}